// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: animalpb/animal.proto

package animalpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SpeakRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsLoud        bool                   `protobuf:"varint,1,opt,name=isLoud,proto3" json:"isLoud,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpeakRequest) Reset() {
	*x = SpeakRequest{}
	mi := &file_animalpb_animal_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpeakRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpeakRequest) ProtoMessage() {}

func (x *SpeakRequest) ProtoReflect() protoreflect.Message {
	mi := &file_animalpb_animal_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpeakRequest.ProtoReflect.Descriptor instead.
func (*SpeakRequest) Descriptor() ([]byte, []int) {
	return file_animalpb_animal_proto_rawDescGZIP(), []int{0}
}

func (x *SpeakRequest) GetIsLoud() bool {
	if x != nil {
		return x.IsLoud
	}
	return false
}

type SpeakResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Resp          string                 `protobuf:"bytes,1,opt,name=resp,proto3" json:"resp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpeakResponse) Reset() {
	*x = SpeakResponse{}
	mi := &file_animalpb_animal_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpeakResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpeakResponse) ProtoMessage() {}

func (x *SpeakResponse) ProtoReflect() protoreflect.Message {
	mi := &file_animalpb_animal_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpeakResponse.ProtoReflect.Descriptor instead.
func (*SpeakResponse) Descriptor() ([]byte, []int) {
	return file_animalpb_animal_proto_rawDescGZIP(), []int{1}
}

func (x *SpeakResponse) GetResp() string {
	if x != nil {
		return x.Resp
	}
	return ""
}

var File_animalpb_animal_proto protoreflect.FileDescriptor

const file_animalpb_animal_proto_rawDesc = "" +
	"\n" +
	"\x15animalpb/animal.proto\x12\x05proto\"&\n" +
	"\fSpeakRequest\x12\x16\n" +
	"\x06isLoud\x18\x01 \x01(\bR\x06isLoud\"#\n" +
	"\rSpeakResponse\x12\x12\n" +
	"\x04resp\x18\x01 \x01(\tR\x04resp2<\n" +
	"\x06Animal\x122\n" +
	"\x05Speak\x12\x13.proto.SpeakRequest\x1a\x14.proto.SpeakResponseB\x83\x01\n" +
	"\tcom.protoB\vAnimalProtoP\x01Z5github.com/bmj2728/PlugsConc/shared/protogen/animalpb\xa2\x02\x03PXX\xaa\x02\x05Proto\xca\x02\x05Proto\xe2\x02\x11Proto\\GPBMetadata\xea\x02\x05Protob\x06proto3"

var (
	file_animalpb_animal_proto_rawDescOnce sync.Once
	file_animalpb_animal_proto_rawDescData []byte
)

func file_animalpb_animal_proto_rawDescGZIP() []byte {
	file_animalpb_animal_proto_rawDescOnce.Do(func() {
		file_animalpb_animal_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_animalpb_animal_proto_rawDesc), len(file_animalpb_animal_proto_rawDesc)))
	})
	return file_animalpb_animal_proto_rawDescData
}

var file_animalpb_animal_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_animalpb_animal_proto_goTypes = []any{
	(*SpeakRequest)(nil),  // 0: proto.SpeakRequest
	(*SpeakResponse)(nil), // 1: proto.SpeakResponse
}
var file_animalpb_animal_proto_depIdxs = []int32{
	0, // 0: proto.Animal.Speak:input_type -> proto.SpeakRequest
	1, // 1: proto.Animal.Speak:output_type -> proto.SpeakResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_animalpb_animal_proto_init() }
func file_animalpb_animal_proto_init() {
	if File_animalpb_animal_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_animalpb_animal_proto_rawDesc), len(file_animalpb_animal_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_animalpb_animal_proto_goTypes,
		DependencyIndexes: file_animalpb_animal_proto_depIdxs,
		MessageInfos:      file_animalpb_animal_proto_msgTypes,
	}.Build()
	File_animalpb_animal_proto = out.File
	file_animalpb_animal_proto_goTypes = nil
	file_animalpb_animal_proto_depIdxs = nil
}
