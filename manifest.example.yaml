# Example manifest file
plugin:
  # plugin_name is the name that will be used to register the plugin
  name: my-plugin
  # plugin_type is the type of plugin, this is used to determine how to handle the plugin
  # see the PluginType enum in the plugin.go file for available options
  type: available-type
  # plugin_format is the format of the plugin, this is used to determine how to handle the plugin: rpc, grpc
  format: grpc
  # plugin_language is the language of the plugin, this is used to determine how to handle the plugin: go, python, etc.
  # see the PluginLanguage enum in the plugin.go file for supported options
  language: go
  # plugin_entrypoint is the binary launched for the plugin
  # this should be located in the same directory as the manifest.yaml file
  entrypoint: some-binary
  # plugin_version is the version of the plugin
  version: 1.0.0
about:
  # plugin_description is the description of the plugin
  description: This plugin is a plugin
  # plugin_maintainer is the maintainer of the plugin
  maintainer: John Dev
  # plugin_url is the url of the plugin
  url: https://github.com/user/plugin
# handshake is used to connect the plugin to the server.
# This is used to determine if the plugin is compatible with the server, it is NOT used to authenticate the plugin.
# The handshake data in the manifest must match the handshake data compiled into the plugin binary
handshake:
  protocol_version: 1
  magic_cookie_key: MY_PLUGIN
  magic_cookie_value: hello
security:
  # If auto_mtls is true, the plugin will automatically establish an mTLS connection with the server
  auto_mtls: true
capabilities:
  filesystem:
    # Grant access to specific dir
    - path: "/home/user/data/"
      permissions: [read, write, list, create, delete]
      recursive: true # Explicitly grant for subdirectories
    # Grant access to a specific file
    - path: "/etc/config.json"
      permissions: [read]
      recursive: false # Default, will be ignored for files
  network:
    egress: # Outbound connections
      - protocol: "tcp"
        hosts: [ "api.example.com", "192.168.1.100" ]
        ports: [ 443, 8080 ]
    ingress: # Inbound connections
      - protocol: "tcp"
        ports: [ 9000 ]
        allowed_origins: [ "192.168.1.100", "192.168.1.101" ]
  process:
    # Allow executing only specific, whitelisted commands
    - exec:
        command: "/usr/bin/rsync"
        args: [ "-a", "--delete", "*" ] # Allow specific arguments or wildcards
    # Scope process management to only children spawned by the plugin itself
    - kill: [ children ]
    - list: [ children ]
